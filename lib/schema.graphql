type Course {
  _id: ID!
  title: String!
  teacher: String
  description: String!
  topic: String
  people: [Student]
}

type Student {
  _id: ID!
  name: String!
  email: String!

}

type Query {
  "Return all the courses"
  getCourses: [Course]

  "Return a course"
  getCourse(id: ID!): Course

  "Return all the students"
  getStudents: [Student]

  "Return a course"
  getStudent(id: ID!): Student
}

input CourseInput {
  title: String!
  teacher: String
  description: String!
  topic: String
}

input CourseEditInput {
  title: String
  teacher: String
  description: String
  topic: String
}

input StudentInput {
  name: String!
  email: String!
}

input StudentEditInput {
  name: String
  email: String
}

type Mutation {
  "Create a course"
  createCourse(input: CourseInput!): Course

  "Update a course"
  editCourse(_id: ID!, input: CourseEditInput): Course

  "Create a student"
  createStudent(input: StudentInput): Student

  "Update a student"
  editStudent(_id: ID!, input: StudentEditInput): Student

  "Add new person to course"
  addPeople(courseId: ID!, personId: ID!): Course
}